-- Generated by Oracle SQL Developer Data Modeler 17.3.0.261.1529
--   at:        2018-01-18 00:21:17 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE USER BD2A20_APP 
    IDENTIFIED BY  
    ACCOUNT UNLOCK 
;

CREATE TABLE oceny (
    id_oceny                  NUMBER(8) NOT NULL,
    id_studenta               NUMBER(10) NOT NULL,
    kod_przedmiotu            VARCHAR2(3 CHAR) NOT NULL,
    rok                       NUMBER(4) NOT NULL,
    rodzaj_semestru           CHAR(1 CHAR) NOT NULL,
    id_typu_oceny             NUMBER(5) NOT NULL,
    wartosc                   NUMBER(2,1) DEFAULT 2 NOT NULL,
    data_i_czas_wystawienia   DATE NOT NULL,
    komentarz                 VARCHAR2(50 CHAR)
)
LOGGING;

COMMENT ON COLUMN oceny.wartosc IS
    'Wartosc z zakresu 2 do 5 stopniowane co 0,5.';

COMMENT ON COLUMN oceny.data_i_czas_wystawienia IS
    'Data i czas wystawienia oceny czastkowej.';

COMMENT ON COLUMN oceny.komentarz IS
    'Uwagi dotyczace oceny.';

CREATE INDEX oc_ockon__idx ON
    oceny (
        id_studenta
    ASC,
        kod_przedmiotu
    ASC,
        rok
    ASC,
        rodzaj_semestru
    ASC )
        LOGGING;

CREATE INDEX oc_typoc__idx ON
    oceny ( id_typu_oceny ASC )
        LOGGING;

GRANT SELECT,INSERT,UPDATE,DELETE ON oceny TO bd2a20_app;

ALTER TABLE oceny ADD CONSTRAINT oc_pk PRIMARY KEY ( id_oceny );

CREATE TABLE oceny_koncowe (
    id_studenta                NUMBER(10) NOT NULL,
    kod_przedmiotu             VARCHAR2(3 CHAR) NOT NULL,
    rok                        NUMBER(4) NOT NULL,
    rodzaj_semestru            CHAR(1 CHAR) NOT NULL,
    ocena_koñcowa              NUMBER(3,2) NOT NULL,
    data_i_czas_aktualizacji   DATE NOT NULL
)
LOGGING;

COMMENT ON COLUMN oceny_koncowe.ocena_koñcowa IS
    'Wartosc obliczna na podstawie ocen dla konkretnej realizacji i konkretnego studenta. Aktualizowana po dodaniu/modyfikacji/usunieciu oceny czastkowej.'
;

COMMENT ON COLUMN oceny_koncowe.data_i_czas_aktualizacji IS
    'Data i czas akutalizacji oceny koncowej.';

CREATE INDEX ockon_real__idx ON
    oceny_koncowe (
        kod_przedmiotu
    ASC,
        rok
    ASC,
        rodzaj_semestru
    ASC )
        LOGGING;

GRANT DELETE,INSERT,SELECT,UPDATE ON oceny_koncowe TO bd2a20_app;

ALTER TABLE oceny_koncowe
    ADD CONSTRAINT ockon_pk PRIMARY KEY ( id_studenta,
    kod_przedmiotu,
    rok,
    rodzaj_semestru );

CREATE TABLE przedmioty (
    kod_przedmiotu   VARCHAR2(3 CHAR) NOT NULL,
    nazwa            VARCHAR2(30 CHAR) NOT NULL,
    opis             VARCHAR2(200 CHAR)
)
LOGGING;

ALTER TABLE przedmioty
    ADD CONSTRAINT kod_up CHECK ( kod_przedmiotu = upper(kod_przedmiotu) );

COMMENT ON COLUMN przedmioty.kod_przedmiotu IS
    'Niepowtarzalny skrot nazwy przedmiotu.';

COMMENT ON COLUMN przedmioty.nazwa IS
    'Pelna nazwa przedmiotu.';

COMMENT ON COLUMN przedmioty.opis IS
    'Zawiera informacje o szczegolach przedmiotu.';

GRANT DELETE,INSERT,UPDATE,SELECT ON przedmioty TO bd2a20_app;

ALTER TABLE przedmioty ADD CONSTRAINT przed_pk PRIMARY KEY ( kod_przedmiotu );

ALTER TABLE przedmioty ADD CONSTRAINT przed_un UNIQUE ( nazwa );

CREATE TABLE realizacje (
    kod_przedmiotu    VARCHAR2(3 CHAR) NOT NULL,
    rok               NUMBER(4) NOT NULL,
    rodzaj_semestru   CHAR(1 CHAR) NOT NULL
)
LOGGING;

ALTER TABLE realizacje
    ADD CHECK ( rodzaj_semestru IN (
        'L',
        'Z'
    ) );

COMMENT ON COLUMN realizacje.rok IS
    'Rok rozpoczecia danej realizacji.';

COMMENT ON COLUMN realizacje.rodzaj_semestru IS
    'Litera Z dla semestru zimowego lub L dla letniego.';

GRANT DELETE,INSERT,SELECT,UPDATE ON realizacje TO bd2a20_app;

ALTER TABLE realizacje
    ADD CONSTRAINT real_pk PRIMARY KEY ( kod_przedmiotu,
    rok,
    rodzaj_semestru );

CREATE TABLE studenci (
    id_studenta   NUMBER(10) NOT NULL,
    nr_albumu     VARCHAR2(10 CHAR) NOT NULL,
    nazwisko      VARCHAR2(30 CHAR) NOT NULL,
    imie          VARCHAR2(20 CHAR) NOT NULL
)
LOGGING;

ALTER TABLE studenci
    ADD CONSTRAINT nazwisko_up CHECK ( nazwisko = upper(nazwisko) );

ALTER TABLE studenci
    ADD CONSTRAINT imie_up CHECK ( imie = upper(imie) );

COMMENT ON COLUMN studenci.id_studenta IS
    'Niepowtarzalny numer studenta nadawny automatycznie.';

COMMENT ON COLUMN studenci.nr_albumu IS
    'Numer przydzielonego studnetowi albumu.';

GRANT DELETE,INSERT,SELECT,UPDATE ON studenci TO bd2a20_app;

ALTER TABLE studenci ADD CONSTRAINT stud_pk PRIMARY KEY ( id_studenta );

ALTER TABLE studenci ADD CONSTRAINT stud_un UNIQUE ( nr_albumu );

CREATE TABLE typy_ocen (
    id_typu_oceny    NUMBER(5) NOT NULL,
    kod_przedmiotu   VARCHAR2(3 CHAR) NOT NULL,
    temat            VARCHAR2(20 CHAR) NOT NULL,
    waga             NUMBER(2) NOT NULL
)
LOGGING;

COMMENT ON COLUMN typy_ocen.temat IS
    'Nazwa tematu, ktorego dotyczy ocena.';

COMMENT ON COLUMN typy_ocen.waga IS
    'Waga oceny w postaci liczby calkowitej z zakresu 1-10';

CREATE INDEX typoc__idx ON
    typy_ocen ( kod_przedmiotu ASC )
        LOGGING;

GRANT DELETE,INSERT,SELECT,UPDATE ON typy_ocen TO bd2a20_app;

ALTER TABLE typy_ocen ADD CONSTRAINT typoc_pk PRIMARY KEY ( id_typu_oceny );

ALTER TABLE oceny
    ADD CONSTRAINT oc_ockon_fk FOREIGN KEY ( id_studenta,
    kod_przedmiotu,
    rok,
    rodzaj_semestru )
        REFERENCES oceny_koncowe ( id_studenta,
        kod_przedmiotu,
        rok,
        rodzaj_semestru )
    DEFERRABLE;

ALTER TABLE oceny
    ADD CONSTRAINT oc_typoc_fk FOREIGN KEY ( id_typu_oceny )
        REFERENCES typy_ocen ( id_typu_oceny )
    DEFERRABLE;

ALTER TABLE oceny_koncowe
    ADD CONSTRAINT ockon_real_fk FOREIGN KEY ( kod_przedmiotu,
    rok,
    rodzaj_semestru )
        REFERENCES realizacje ( kod_przedmiotu,
        rok,
        rodzaj_semestru )
    DEFERRABLE;

ALTER TABLE oceny_koncowe
    ADD CONSTRAINT ockon_stud_fk FOREIGN KEY ( id_studenta )
        REFERENCES studenci ( id_studenta )
    DEFERRABLE;

ALTER TABLE realizacje
    ADD CONSTRAINT real_przed_fk FOREIGN KEY ( kod_przedmiotu )
        REFERENCES przedmioty ( kod_przedmiotu )
    DEFERRABLE;

ALTER TABLE typy_ocen
    ADD CONSTRAINT typoc_przed_fk FOREIGN KEY ( kod_przedmiotu )
        REFERENCES przedmioty ( kod_przedmiotu )
    DEFERRABLE;

CREATE OR REPLACE TRIGGER fkntm_oceny BEFORE
    UPDATE OF id_typu_oceny,id_studenta,kod_przedmiotu,rok,rodzaj_semestru ON oceny FOR EACH ROW
    WHEN (new.id_typu_oceny <> old.id_typu_oceny or new.id_studenta <> old.id_studenta or new.kod_przedmiotu <> old.kod_przedmiotu or new.rok <> old.rok or new.rodzaj_semestru <> old.rodzaj_semestru)
BEGIN
    raise_application_error(-20225,'Non Transferable FK constraint  on table OCENY is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_oceny_koncowe BEFORE
    UPDATE OF id_studenta,kod_przedmiotu,rok,rodzaj_semestru ON oceny_koncowe FOR EACH ROW
    WHEN (new.id_studenta <> old.id_studenta or new.kod_przedmiotu <> old.kod_przedmiotu or new.rok <> old.rok or new.rodzaj_semestru <> old.rodzaj_semestru)
BEGIN
    raise_application_error(-20225,'Non Transferable FK constraint  on table OCENY_KONCOWE is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_realizacje BEFORE
    UPDATE OF kod_przedmiotu ON realizacje FOR EACH ROW
    WHEN (new.kod_przedmiotu <> old.kod_przedmiotu)
BEGIN
    raise_application_error(-20225,'Non Transferable FK constraint  on table REALIZACJE is violated');
END;
/

CREATE OR REPLACE TRIGGER fkntm_typy_ocen BEFORE
    UPDATE OF kod_przedmiotu ON typy_ocen FOR EACH ROW
    WHEN (new.kod_przedmiotu <> old.kod_przedmiotu)
BEGIN
    raise_application_error(-20225,'Non Transferable FK constraint  on table TYPY_OCEN is violated');
END;
/

CREATE SEQUENCE oc_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER oc_seq_trg BEFORE
    INSERT ON oceny
    FOR EACH ROW
    WHEN ( new.id_oceny IS NULL )
BEGIN
    :new.id_oceny := oc_seq.nextval;
END;
/

CREATE SEQUENCE stud_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER stud_seq_trg BEFORE
    INSERT ON studenci
    FOR EACH ROW
    WHEN ( new.id_studenta IS NULL )
BEGIN
    :new.id_studenta := stud_seq.nextval;
END;
/

CREATE SEQUENCE typoc_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER typoc_seq_trg BEFORE
    INSERT ON typy_ocen
    FOR EACH ROW
    WHEN ( new.id_typu_oceny IS NULL )
BEGIN
    :new.id_typu_oceny := typoc_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             6
-- CREATE INDEX                             4
-- ALTER TABLE                             18
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           7
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          3
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              1
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
